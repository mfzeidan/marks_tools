
for $x in $doc("student")[]
where (every $name in $x.major satisfies $name  )
return $x.major = "CS" 




soniq version "1.0";

let $doc := { "student" : [
{ "s": "G0017", "name": "Tom", "major": "CS"}],
"course": [
{"co": "CS530", "title": "math foundations", "credits": 3}
],
"class": [
{"cl": "11427", "co": "cs530", "instructor": "Brodsky"} 
],
"transcript": [
{"s": "G0017", "co": "CS530", "grade": "A", "se": "2015-16-1"}
],
"enrolled": [
{"s": "G0017", "cl": "11427"}
],
"prereq": [
{"co": "CS550", "pre": "CS530"}
]}

return $doc.("student")[].("s")



a. The student “G113” has taken the course “cs530” (must be in
Transcipts)

//CORRECT

let $q1 := $doc.("transcript")[][$$.co = "CS530"]
return $q1.s = "G113" and $q1.co = "CS530"


b. A student named “John Smith” has taken the course “cs530”
(must be in Transcipts)

//CORRECt

let $stud := $doc.("student")[][$$.name = "John Smith"]
let $tscript := $doc.("transcript")[][$$.co = "CS530"].s
return $tscript = $stud.s

c. All students named “John Smith” has taken the course “cs530”
(must be in Transcipts)

//CORRECT

return every $s in $doc.student[][$$.name = "John Smith"]
satisfies ($s.s = $doc.transcript[][$$.co = "CS530"].s)


D. The student “G113” student has satisfied all prerequisites each
class she is enrolled in. 

//CORRECT

let $classes := (
for  $x in $doc.transcript[][$$.s = "G113"]
return $x)

let $prereqs :=(
for $x in $classes
where (every $c in $doc.prereq[]
        satisfies $c.pre = $x.co)
        return $x)
        
return $prereqs.co = $prereqs.co

e. Every student has satisfied all prerequisites each class she is
enrolled in.

//CORRECT BUT CHECK AGAIN

let $classes := (
for  $x in $doc.transcript[]
return $x)

let $prereqs :=(
for $x in $classes
where (every $c in $doc.prereq[]
        satisfies $c.pre = $x.co)
        return $x)
        
return $prereqs.co = $prereqs.co


f. Every student who majors in “CS” has satisfied all prerequisites for
each class she is enrolled in.

//CORRECT BUT CHECK


let $classes := (
for  $x in $doc.transcript[]
where $x.s = $doc.student[][$$.major = "CS"].s
return $x)

let $prereqs :=(
for $x in $classes
where (every $c in $doc.prereq[]
        satisfies $c.pre = $x.co)
        return $x)
        return $prereqs.co = $prereqs.co


g. A student named “John Smith” is enrolled in a class for which he
did satisfied all prerequisites.

//CORRECT BUT CHECK AGAIN


let $classes := (
for  $x in $doc.transcript[]
where $x.s = $doc.student[][$$.name = "John Smith"].s
return $x)

let $prereqs :=(
for $x in $classes
where (some $c in $doc.prereq[]
        satisfies $c.pre = $x.co)
        return $x)
        return $prereqs.co = $prereqs.co

h. Some courses do not have prerequisites

//fine

let $course := $doc("course")[].co
let $prereqs := $doc("prereq")[].co
return $prereqs = $course


i. All classes offered this semester have prerequisites.

//fixed

return every $cl in $doc.class[]
satisfies (some $prereq in $doc.prereq[] satisfies $prereq.co = $cl.co)

j. Some students received only grades “A” or “B” in every course
they have taken (must appear in Transcripts)

//GOOD ENOUGH

return some $st in $doc.student[]
satisfies (every $b in $doc.transcript[]
		satisfies (
			 $b.s = $st.s
			and $b.grade = "A"
			or $b.grade = "B"))


k. All students currently involved in classes taught by professor
Brodsky (instructor = “Brodsky”) major in “CS”

//GOOD ENOUGH

let $brod := $doc("class")[][$$.instructor = "Brodsky"].co
let $brod_stud := $doc("transcript")[][$$.co = $brod].s
let $students := $doc("student")[][$$.s = $brod_stud]
for $student in $students
where (some $student  in $students satisfies $student.major = "CS")
return $student.major = "CS"


l. Some students who are currently enrolled in classes taught by
professor Brodsky major in “CS”

//fixed

return some $st in $doc.student[],
	$cl in $doc.class[],
	$e in $doc.enrolled[]
	
satisfies( $st.major = "CS" 
and $cl.instructor = "Brodsky" 
and $cl.cl = $e.cl)


2. Write jsoniq queries to express/compute each of the following sets
(sequences) of:

a. All students who have taken the course “cs530” (must be in
Transcipts)

//CORRECT

let $stud :=(
for $x in $doc
return $x.("transcript")[][$$.co = "CS530"].s)
return $doc("student")[][$$.s = $stud].name


b. All students named “John Smith” who have taken the course
“cs530” (must be in Transcipts)

// CORRECT

let $q2 := $doc.("student")[][$$.name = "John Smith"]
let $transcripts := $doc.("transcript")[][$$.s = $q2.s][$$.co = "CS530"]
return $transcripts


c. All students who satisfied all prerequisites each class they are
enrolled in.

//unsure

d. All students who are enrolled in a class for which they have not
satisfied all its prerequisites.

//unsure

e. All students named “John Smith” who are enrolled in a class for
which they have not satisfied all its prerequisites.

//unsure

f. All courses that do not have prerequisites

// CORRECT

let $classes_offered := distinct-values($doc("transcript")[].co)
let $prereqs := distinct-values($doc("prereq")[].pre)
for $class in $classes_offered
where $class = $prereqs
return $class

g. All course that do have some prerequisites

//CORRECT

let $prereqs := distinct-values($doc("prereq")[].co)
return $prereqs


h. All classes offered this semester that have prerequisites.

//CORRECT

let $this_sem := $doc.("transcript")[]
let $jan_classes := (
for $date in $this_sem
where $date.se = "2015-16-1"
return $date)
let $prereq_classes := $doc("prereq")[].co
for $classes in $jan_classes
where $classes.co = $prereq_classes 
return $classes.co



i. All students who received only grades “A” or “B” in every course
they have taken (must appear in Transcripts)

//eh CORRECT

let $students := $doc("student")[].s
let $A_OR_B :=(
for $stud in $students
where (every $grade in $doc("transcript")[].s satisfies  $doc("transcript")[][$$.s = $stud][$$.grade = "A" or $$.grade = "B"])
return $stud)
return $A_OR_B

j. All CS students who are currently enrolled in a class taught by
professor Brodsky (instructor = “Brodsky”).

//CORRECT

let $q2 := $doc.("class")[][$$.instructor = "Brodsky"]
let $classes_taught_by_teach := $q2.co
let $students_teach := $doc.("transcript")[][$$.co = $classes_taught_by_teach]
let $student_no := $students_teach.s
return $doc.("student")[][$$.s = $student_no]
